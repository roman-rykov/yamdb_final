name: CI

on:
  push:
    branches: 
      - master

  workflow_dispatch:

jobs:

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-import-order pytest
          pip install -r requirements.txt
      - name: Lint with flake8
        run: flake8 .
      - name: Test with pytest
        run: |
          pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb:latest

  deploy:
    name: Deploy on server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - uses: actions/checkout@v2
    - name: Create .env file
      run: |
        touch .env
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DB_ENGINE=django.db.backends.postgresql" >> .env
        echo "DB_NAME=postgres" >> .env
        echo "POSTGRES_USER=postgres" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "DB_HOST=db" >> .env
        echo "DB_PORT=5432" >> .env
        echo "HOST=${{ secrets.SSH_HOST }}" >> .env
    - name: Copying files via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: ".env,docker-compose.yaml,nginx/default.conf"
        target: "yamdb"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd yamdb/
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/yamdb
          sudo docker-compose stop
          sudo docker-compose up -d

  send_message:
    name: Send informational message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Sends message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
